"use strict";(()=>{var e={};e.id=6154,e.ids=[6154],e.modules={1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},8139:(e,t,n)=>{n.r(t),n.d(t,{config:()=>m,default:()=>f,routeModule:()=>c});var r={};n.r(r),n.d(r,{default:()=>l});var s=n(1802),o=n(7153),i=n(6249),a=n(798),u=n(1185),d=n.n(u);async function l(e,t){let{email:n,year:r,month:s}=e.query;if(!n||!r||!s)return t.status(400).json({message:"Email, year, and month are required."});try{d().connection.readyState||await d().connect(process.env.MONGO_URI);let e=await a.Z.findOne({userEmail:n});if(!e)return t.status(404).json({message:"No solved questions found for this user."});let r=e.solvedQuestionIds?e.solvedQuestionIds.length:0,s=Array.from({length:30},(e,t)=>`2024-09-${String(t+1).padStart(2,"0")}`),o=s.map(()=>r/30);t.status(200).json({email:e.userEmail,solvedQuestions:{labels:s,data:o}})}catch(e){console.error("Error fetching solved questions:",e),t.status(500).json({message:"Internal server error"})}}let f=(0,i.l)(r,"default"),m=(0,i.l)(r,"config"),c=new s.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/solved-questions-monthly",pathname:"/api/solved-questions-monthly",bundlePath:"",filename:""},userland:r})},798:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(1185),s=n.n(r);let o=new(s()).Schema({userEmail:{type:String,required:!0},solvedQuestionIds:[{type:String}]}),i=s().models.Beginner||s().model("Beginner",o)},7153:(e,t)=>{var n;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return n}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(n||(n={}))},1802:(e,t,n)=>{e.exports=n(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var n=t(t.s=8139);module.exports=n})();