"use strict";(()=>{var e={};e.id=2091,e.ids=[2091],e.modules={1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5184:e=>{e.exports=require("nodemailer")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},1094:(e,t,n)=>{n.r(t),n.d(t,{config:()=>h,default:()=>P,routeModule:()=>A});var o={};n.r(o),n.d(o,{default:()=>g});var s=n(1802),r=n(7153),a=n(6249),i=n(5184),l=n.n(i),d=n(1163),u=n(1185),m=n.n(u);let c=new(m()).Schema({name:{type:String,required:!0},email:{type:String,required:!0},message:{type:String,required:!0},createdAt:{type:Date,default:Date.now}}),p=m().models.Contact||m().model("Contact",c),f=require("deep-email-validator");async function g(e,t){if(await (0,d.Z)(),"POST"===e.method){let{name:n,email:o,message:s}=e.body;if(!n||!o||!s)return t.status(400).json({message:"All fields are required"});let{valid:r,reason:a}=await (0,f.validate)(o);if(!r)return t.status(400).json({message:`Invalid email address: ${a}`});try{if(await p.findOne({email:o}))return t.status(400).json({message:"A message from this email has already been submitted"});let e=l().createTransport({service:"Gmail",auth:{user:process.env.EMAIL_USER,pass:process.env.EMAIL_PASS}}),r={from:o,to:process.env.RECEIVED_EMAIL_USER,subject:`Contact Form Submission from ${n}`,html:`
                    <html>
                        <body>
                            <h2>Contact Form Submission</h2>
                            <p><strong>Name:</strong> ${n}</p>
                            <p><strong>Email:</strong> ${o}</p>
                            <p><strong>Message:</strong></p>
                            <blockquote style="border-left: 3px solid #ddd; padding-left: 10px; margin: 10px 0;">
                                ${s}
                            </blockquote>
                            <hr />
                            <footer>
                                <p>This message was sent from the JSMaster contact form.</p>
                            </footer>
                        </body>
                    </html>
                `};await e.sendMail(r);let a=new p({name:n,email:o,message:s});await a.save(),t.status(200).json({message:"Message sent successfully!"})}catch(e){console.error("Error handling contact form submission:",e),t.status(500).json({message:"Failed to handle contact form submission"})}}else t.setHeader("Allow",["POST"]),t.status(405).json({message:"Method Not Allowed"})}let P=(0,a.l)(o,"default"),h=(0,a.l)(o,"config"),A=new s.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/contact",pathname:"/api/contact",bundlePath:"",filename:""},userland:o})},1163:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(1185),s=n.n(o);let r=process.env.MONGODB_URI;if(!r)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let a=global.mongoose;a||(a=global.mongoose={conn:null,promise:null});let i=async function(){return a.conn||(a.promise||(a.promise=s().connect(r,{bufferCommands:!1}).then(e=>e)),a.conn=await a.promise),a.conn}},7153:(e,t)=>{var n;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return n}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(n||(n={}))},1802:(e,t,n)=>{e.exports=n(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var n=t(t.s=1094);module.exports=n})();